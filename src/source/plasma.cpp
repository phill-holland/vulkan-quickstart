#include "plasma.h"
			
int plasma::horizontialBuffer[] = {32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,34,34,34,34,34,35,35,35,36,
                        36,36,37,37,37,38,38,38,39,39,39,40,40,40,41,41,42,42,42,43,43,44,44,44,45,45,46,
                        46,46,47,47,48,48,48,49,49,49,50,50,51,51,51,51,52,52,52,53,53,53,54,54,54,54,54,
                        55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,55,55,55,
                        55,55,55,54,54,54,54,53,53,53,52,52,52,51,51,51,50,50,49,49,48,48,47,47,46,46,45,
                        45,44,44,43,43,42,41,41,40,40,39,38,38,37,37,36,35,35,34,33,33,32,32,31,30,30,29,
                        28,28,27,26,26,25,25,24,23,23,22,22,21,20,20,19,19,18,18,17,17,16,16,15,15,14,14,
                        13,13,13,12,12,11,11,11,10,10,10,9,9,9,9,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
                        7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,10,10,10,11,11,11,11,12,12,12,13,13,13,14,14,15,15,
                        15,16,16,17,17,17,18,18,19,19,19,20,20,21,21,21,22,22,22,23,23,24,24,24,25,25,25,
                        26,26,26,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31};

int plasma::verticalBuffer[] = {32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,34,34,34,34,34,35,
                            35,35,35,35,36,36,36,36,37,37,37,38,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,
                            43,43,44,44,44,45,45,46,46,46,47,47,47,48,48,48,49,49,49,50,50,51,51,51,52,52,52,53,
                            53,53,54,54,54,55,55,55,55,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,59,60,60,60,
                            60,60,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
                            62,62,62,61,61,61,61,61,61,61,61,60,60,60,60,60,59,59,59,59,59,58,58,58,58,57,57,57,
                            56,56,56,56,55,55,55,54,54,54,53,53,53,52,52,51,51,51,50,50,50,49,49,48,48,48,47,47,
                            46,46,46,45,45,44,44,44,43,43,42,42,42,41,41,40,40,40,39,39,38,38,38,37,37,36,36,36,
                            35,35,35,34,34,34,33,33,33,32,32,32,31,31,31,31,30,30,30,29,29,29,29,28,28,28,28,28,
                            27,27,27,27,27,27,26,26,26,26,26,26,26,26,26,26,26,25,25,25,25,25,25,25,25,25,25,25,
                            26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,29,29,29,29,30,
                            30,30,30,31,31,31,31,32,32,32,33,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,38,38,
                            38,39,39,39,40,40,40,41,41,41,41,42,42,42,43,43,43,44,44,44,44,45,45,45,46,46,46,46,
                            47,47,47,47,48,48,48,48,48,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,
                            51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,50,50,50,50,50,50,50,49,49,
                            49,49,49,49,48,48,48,48,47,47,47,47,46,46,46,45,45,45,44,44,44,43,43,43,42,42,42,41,
                            41,41,40,40,39,39,39,38,38,37,37,37,36,36,35,35,35,34,34,33,33,32,32,32,31,31,30,30,
                            29,29,29,28,28,27,27,27,26,26,25,25,25,24,24,23,23,23,22,22,21,21,21,20,20,20,19,19,
                            19,18,18,18,17,17,17,17,16,16,16,16,15,15,15,15,14,14,14,14,14,13,13,13,13,13,13,13,
                            12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,
                            13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,16,16,16,16,16,17,17,17,18,18,18,18,19,
                            19,19,20,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,28,29,29,29,30,30,30,31,31,31,31};

int plasma::horizontialCount[] =  {0,54,108,163,217,272,326,380,435,489,544,598,652,707,761,816,870,924,979,1033,1088,
                        1142,1196,1251,1305,1359,1414,1468,1523,1577,1631,1686,1740,1795,1849,1903,1958,2012,
                        2067,2121,2175,2230,2284,2339,2393,2447,2502,2556,2611,2665,2719,2774,2828,2883,2937,
                        2991,3046,3100,3155,3209,3263,3318,3372,3427,3481,3535,3590,3644,3699,3753,3807,3862,
                        3916,3971,4025,4079,4134,4188,4243,4297,4351,4406,4460,4515,4569,4623,4678,4732,4787,
                        4841,4896,4950,5004,5059,5113,5168,5222,5276,5331,5385,5440,5494,5548,5603,5657,5712,
                        5766,5820,5875,5929,5984,6038,6092,6147,6201,6256,6310,6364,6419,6473,6528,6582,6636,
                        6691,6745,6800,6854,6908,6963,7017,7072,7126,7180,7235,7289,7344,7398,7452,7507,7561,
                        7616,7670,7724,7779,7833,7888,7942,7996,8051,8105,8160,8214,8268,8323,8377,8432,8486,
                        8540,8595,8649,8704,8758,8812,8867,8921,8976,9030,9084,9139,9193,9248,9302,9356,9411,
                        9465,9520,9574,9628,9683,9737,9792,9846,9900,9955,10009,10064,10118,10172,10227,10281,
                        10335,10390,10444,10499,10553,10607,10662,10716,10771,10825,10879,10934,10988,11043,
                        11097,11151,11206,11260,11315,11369,11423,11478,11532,11587,11641,11695,11750,11804,
                        11859,11913,11967,12022,12076,12131,12185,12239,12294,12348,12403,12457,12511,12566,
                        12620,12675,12729,12783,12838,12892,12947,13001,13055,13110,13164,13219,13273,13327,
                        13382,13436,13491,13545,13599,13654,13708,13763,13817,13871,13926,13980,14035,14089,
                        14143,14198,14252,14307,14361,14415,14470,14524,14579,14633,14687,14742,14796,14851,
                        14905,14959,15014,15068,15123,15177,15231,15286,15340,15395,15449,15503,15558,15612,
                        15667,15721,15775,15830,15884,15939,15993,16047,16102,16156,16211,16265,16319};

int plasma::verticalCount[] =     {0,60,120,181,241,302,362,423,483,543,604,664,725,785,846,906,967,1027,1087,1148,
                        1208,1269,1329,1390,1450,1511,1571,1632,1692,1752,1813,1873,1934,1994,2055,2115,
                        2176,2236,2296,2357,2417,2478,2538,2599,2659,2720,2780,2840,2901,2961,3022,3082,
                        3143,3203,3264,3324,3384,3445,3505,3566,3626,3687,3747,3808,3868,3928,3989,4049,
                        4110,4170,4231,4291,4352,4412,4472,4533,4593,4654,4714,4775,4835,4896,4956,5016,
                        5077,5137,5198,5258,5319,5379,5440,5500,5560,5621,5681,5742,5802,5863,5923,5984,
                        6044,6104,6165,6225,6286,6346,6407,6467,6528,6588,6648,6709,6769,6830,6890,6951,
                        7011,7072,7132,7192,7253,7313,7374,7434,7495,7555,7616,7676,7736,7797,7857,7918,
                        7978,8039,8099,8160,8220,8280,8341,8401,8462,8522,8583,8643,8704,8764,8824,8885,
                        8945,9006,9066,9127,9187,9247,9308,9368,9429,9489,9550,9610,9671,9731,9791,9852,
                        9912,9973,10033,10094,10154,10215,10275,10335,10396,10456,10517,10577,10638,10698,
                        10759,10819,10879,10940,11000,11061,11121,11182,11242,11303,11363,11423,11484,
                        11544,11605,11665,11726,11786,11847,11907,11967,12028,12088,12149,12209,12270,12330,
                        12391,12451,12511,12572,12632,12693,12753,12814,12874,12935,12995,13055,13116,13176,
                        13237,13297,13358,13418,13479,13539,13599,13660,13720,13781,13841,13902,13962,14023,
                        14083,14143,14204,14264,14325,14385,14446,14506,14567,14627,14687,14748,14808,14869,
                        14929,14990,15050,15111,15171,15231,15292,15352,15413,15473,15534,15594,15655,15715,
                        15775,15836,15896,15957,16017,16078,16138,16199,16259,16319};


void plasma::reset(int x,int y,int w,int h)
{
    init = false; cleanup();

    positionX = x; positionY = y;
    maxWidth = w; maxHeight = h;

    soffset = 0; aoffset = 0;
    
    //maxBytes = maxWidth * maxHeight;
    //pixelBuffer = new int[maxBytes];
    //if(pixelBuffer == NULL) return;

    int vc = sizeof(verticalCount) / sizeof(verticalCount[0]);
    int hc = sizeof(horizontialCount) / sizeof(horizontialCount[0]);

for(int i=0;i<vc;i++) verticalCount[i] = verticalCount[i] >> 8;
    for(int j=0;j<hc;j++) horizontialCount[j] = horizontialCount[j] >> 8;

    hBufferLength = sizeof(horizontialBuffer) / sizeof(horizontialBuffer[0]);
    vBufferLength = sizeof(verticalBuffer) / sizeof(verticalBuffer[0]);


    //for(int i=0;i<verticalCount.length;i++) verticalCount[i] = verticalCount[i] >> 8;
    //for(int j=0;j<horizontialCount.length;j++) horizontialCount[j] = horizontialCount[j] >> 8;

    //hBufferLength = horizontialBuffer.length;
    //vBufferLength = verticalBuffer.length;

    green = 0; greenDirection = 0;

    init = true;
}

void plasma::update()//legacy::graphics g)
{
    int horzvalue = 0,vertvalue = 0;
    int s = soffset,a = aoffset;

    for(int x=0;x<maxWidth;++x)
    {

        horzvalue++;
        a = aoffset;

        s++;
        if(s>=hBufferLength) s = 0;

        int xColour = horizontialBuffer[s] + horizontialCount[horzvalue];

        vertvalue = 0;
        //for(int y=0;y<maxBytes;y+=maxWidth)
        for(int y=0;y<maxHeight;++y)
        {
            a++;
            if(a >=vBufferLength) a = 0;
                                
            vertvalue++;
            //pixelBuffer[x + y] = xColour + verticalCount[vertvalue] + verticalBuffer[a];
            int red = xColour + verticalCount[vertvalue] + verticalBuffer[a];				
            int blue = red;
    
            colour c(red,green,blue);
            set(x,y,c);
            //pixelBuffer[x + y] = (0xff000000 | red << 16 | green << 8 | blue);
        }
    }

    soffset++;
    if(soffset>=hBufferLength) soffset = 0;
    aoffset++;
    if(aoffset>=vBufferLength) aoffset = 0;
    
   // g.drawRGB(pixelBuffer,0,maxWidth,positionX,positionY,maxWidth,maxHeight,false);

    if(greenDirection==0) 
    {
        green++;
        if(green>=150) greenDirection=1;
    }
    else 
    {
        green--;
        if(green<=0) greenDirection = 0;
    }
}

void plasma::makeNull()
{
    //pixelBuffer = NULL;
}

void plasma::cleanup()
{
    //if(pixelBuffer != NULL) delete[] pixelBuffer;
}